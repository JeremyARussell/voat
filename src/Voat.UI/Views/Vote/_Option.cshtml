@*

    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@

@model Voat.Domain.Models.VoteOption

<div data-voat-item="Options">
    <div class="form-horizontal" role="form">
        <h2>Option</h2>

        <input asp-for="ID" type="hidden" data-voat-field="Options">

        <div class="form-group">
            <label class="col-md-2 control-label" asp-for="Title">Title</label>
            <div class="col-md-10">
                <input asp-for="Title" class="form-control" type="text" value="@Model.Title" data-voat-field="Options">
                <span asp-validation-for="Title"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label" asp-for="Content">Description</label>
            <div class="col-md-10">
                @Html.MarkdownEditorFor(x => x.Content, new { data_voat_field = "Options", @class = "form-control" })
                <span asp-validation-for="Content"></span>
            </div>
        </div>

        <div class="col-md-offset-2 col-md-10">
            <div data-voat-list="Outcomes">
                @if (Model.Outcomes != null && Model.Outcomes.Any())
                {
                    for (int i2 = 0; i2 < Model.Outcomes.Count; i2++)
                    {
                        @Html.PartialFor(x => x.Outcomes[i2], "_EditVoteOutcome");
                        @*var viewData = new ViewDataDictionary(ViewData);
                            viewData.TemplateInfo.HtmlFieldPrefix = $"Options[{i.ToString()}].VoteOutcomes[{i2.ToString()}]";
                            @Html.Partial("_EditVoteOutcome", Model.Outcomes[i2],
                            viewData);*@
                    }
                }
            </div>
            <div class="form-horizontal" role="form">
                <div class="form-group">
                    <label class="col-md-2 control-label" for="Bio">Outcome(Optional)</label>
                    <div class="col-md-10">
                        @*Get this via reflection*@
                        <select id="vote-outcome-type" name="vote-outcome-type" class="form-control" type="text"
                                asp-items="Voat.Domain.Models.VoteMetadata.Instance.Outcomes.Select(x => new SelectListItem() {
                                                        Text = x.Attribute.Name,
                                                        Value = x.Type.Name
                                                    })"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <button class="btn-whoaverse" type="button" onclick="voat.voting.addOutcome(this);">Add Outcome</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn-voat" onclick="voat.voting.removeItem(this, '*[data-voat-item=\'Options\']');">Remove</button>
            </div>
        </div>
    </div>
</div>