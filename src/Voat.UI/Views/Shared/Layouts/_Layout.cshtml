@*
    
    Copyright(c) Voat, Inc.

    This file is part of Voat.

    This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl-3.0.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an
    "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
    or implied. See the License for the specific language governing
    rights and limitations under the License.

    All Rights Reserved.

*@


@using System.Configuration
@using Voat.Models.ViewModels

@{
    Layout = "~/Views/Shared/Layouts/_LayoutContainer.cshtml";

    if (ViewBag.PreviewMode != null && ViewBag.PreviewMode == true)
    {
        Layout = "~/Views/Shared/Layouts/_LayoutEmpty.cshtml";
    }

    var userData = Voat.Domain.UserData.GetContextUserData(Context);
    System.Diagnostics.Debug.Assert(userData == null || userData.UserName == User.Identity.Name, "Context UserData and Identity UserName mismatch");

    NavigationViewModel navModel = ViewBag.NavigationViewModel;

    LoginViewModel loginViewModel = new LoginViewModel();

    string routeController = (string)ViewContext.RouteData.Values["controller"];
    string routeAction = (string)ViewContext.RouteData.Values["action"];
    string submissionID = (string)ViewContext.RouteData.Values["submissionID"];

    string selectedUser = ViewBag.UserName;

    ViewBag.Title = ViewBag.Title ?? VoatSettings.Instance.SiteSlogan;
    ViewBag.Description = ViewBag.Description ?? VoatSettings.Instance.SiteDescription;
    ViewBag.Url = ViewBag.Url ?? Context.Request.GetUrl().ToString();
    ViewBag.Image = ViewBag.Image ?? Context.Request.GetUrl().Scheme + "://" + Context.Request.GetUrl().Authority + VoatSettings.Instance.SiteLogo;
}

<div style="display: none" id="share-a-link-overlay">
    <div>
        <h1>share a link</h1>
    </div>
</div>

<div id="header" tabindex=0 role="banner">

    @await Component.InvokeAsync("Dashboard")

    <div id="header-container">
        <div id="header-banner">

            <a title="@VoatSettings.Instance.SiteSlogan" href="/" id="header-img-a">
                <img id="header-img" src="@VoatSettings.Instance.SiteLogo" alt="@VoatSettings.Instance.SiteName" height="31" width="112">
            </a>

            <div id="show-menu-button"></div>
            @if (navModel != null)
            {
                //New Navigation Model
                //TODO: Possibly move the path into the model?
                switch (navModel.MenuType)
                {
                    case MenuType.Set:
                        @Html.Partial("~/Views/Shared/Navigation/_SetMenu.cshtml", navModel)
                        break;
                    case MenuType.UserProfile:
                        @Html.Partial("~/Views/Shared/Navigation/_UserProfileMenu.cshtml", navModel)
                        break;
                    case MenuType.Discovery:
                        @Html.Partial("~/Views/Shared/Navigation/_DiscoveryMenu.cshtml", navModel)
                        break;
                    case MenuType.Subverse:
                        @Html.Partial("~/Views/Shared/Navigation/_SubverseMenu.cshtml", navModel)
                        break;
                    case MenuType.UserMessages:
                    case MenuType.Smail:
                        @Html.Partial("~/Views/Shared/Navigation/_MailMenu.cshtml", navModel)
                        break;
                    case MenuType.Domain:
                        @Html.Partial("~/Views/Shared/Navigation/_DomainsMenu.cshtml", navModel)
                        break;
                    case MenuType.Moderator:
                        @Html.Partial("~/Views/Shared/Navigation/_ModMenu.cshtml", navModel)
                        break;
                    case MenuType.Statistics:
                        @Html.Partial("~/Views/Shared/Navigation/_Statistics.cshtml", navModel)
                        break;
                }
            }
            @Html.Partial("_LoginPartial")
        </div>
    </div>
</div>

@* Must be logged in Modal *@
@if (!User.Identity.IsAuthenticated)
{
    <div class="modal fade" id="mustbeloggedinModal" tabindex="-1" role="dialog" aria-labelledby="mustbeloggedinlabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="mustbeloggedinlabel">Login or register</h4>
                </div>
                <div class="modal-body">
                    You can login if you already have an account or register by clicking the button below.
                    Registering is free and <strong>all you need is a username and password</strong>. We never ask you for your e-mail.
                    <div>
                        @{
                            var viewData = new ViewDataDictionary(ViewData);
                            viewData["ReturnUrl"] = Context.Request.GetUrl().PathAndQuery;
                        }
                        @Html.Partial("~/Views/Account/_LoginModal.cshtml", new LoginViewModel(), viewData)
                       
                    </div>
                </div>
                <div class="modal-footer">
                    <p>
                        <b>@Html.ActionLink("Register", "Register", "Account")</b> if you don't have an account. You know you want to ;)
                    </p>
                    <p>
                        <b>@Html.ActionLink("Forgot password?", "ForgotPassword", "Account")</b>
                    </p>
                </div>
            </div>
        </div>
    </div>
}

@if (User.Identity.IsAuthenticated)
{
    var userCCP = userData.Information.CommentPoints.Sum;
    var scaledQuota = userCCP >= 20 ? Math.Max(VoatSettings.Instance.DailyVotingQuota, (userCCP / 2)) : 10;

    @* Not enough comment contribution points Modal *@
    <div class="modal fade" id="notenoughccp" tabindex="-1" role="dialog" aria-labelledby="notenoughccplabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="notenoughccplabel">Hi! It looks like you are new around here</h4>
                </div>
                <div class="modal-body">
                    <p>Welcome to @VoatSettings.Instance.SiteName!</p>
                    <p>In order to downvote comments or submissions you need to have at least 100 comment contribution points.</p>
                    <p>Every time someone upvotes one of your comments, you gain 1 comment contribution point.</p>
                    <p>You currently have @userCCP comment contribution points.</p>
                    <p>Tip: a good way to earn more contribution points is to take part in discussions or say hi in /v/introductions.</p>
                    <p>This requirement was established as a measure to encourage new members to get involved and participate in discussions.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-whoaverse-medium" data-dismiss="modal">Ok, got it!</button>
                </div>
            </div>
        </div>
    </div>
        @* Not enough comment contribution points for upvoting Modal *@
        <div class="modal fade" id="notenoughccpupvote" tabindex="-1" role="dialog" aria-labelledby="notenoughccpupvotelabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="notenoughccpupvotelabel">Hi! It looks like you are new around here.</h4>
                    </div>
                    <div class="modal-body">
                        <p>Welcome to @VoatSettings.Instance.SiteName!</p>
                        <p>The number of votes you can place is tied to your comment contribution points.</p>
                        <p>You are currently limited to @scaledQuota votes per 24 hours.</p>
                        <p>Every time someone upvotes one of your comments, you gain 1 comment contribution point.</p>
                        <p>You currently have @userCCP comment contribution points.</p>
                        <p>Tip: a good way to earn more contribution points is to take part in discussions or say hi in v/introductions.</p>
                        <p>This requirement was established as a measure to encourage new members to get involved and participate in discussions.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-whoaverse-medium" data-dismiss="modal">Ok, got it!</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="modal-background"></div>
}

@RenderBody()

@if (Context.Request.Cookies["NotFirstTime"] == null)
{
    HttpCookie hc = new HttpCookie("NotFirstTime", "1");
    hc.Expires = Repository.CurrentDate.AddYears(1);
    Context.Response.Cookies.Add(hc);

    @* First time visitor welcome *@
if (!User.Identity.IsAuthenticated)
{
    <script type="text/javascript">
                window.onload = function () { firstTimeVisitorWelcome(); }
    </script>
}
    @* End First time visitor welcome *@

    <div class="alert eppnotice alert-dismissible" role="alert">
        <button type="button" class="btn-whoaverse-medium" data-dismiss="alert" aria-hidden="true">&times;</button>
        Cookies help us deliver our services. By using our services, you agree to our use of cookies.
    </div>
}

@Html.Partial("_Footer")

@section PageScripts {
    @* render any additional header info like stylesheet paths *@
    @RenderSection("PageScripts", required: false)
}

@section PageHeader {
    @* render any additional header info like stylesheet paths *@
    @RenderSection("PageHeader", required: false)
}
